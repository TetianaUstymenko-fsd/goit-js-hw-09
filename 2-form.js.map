{"version":3,"file":"2-form.js","sources":["../src/js/2-form.js"],"sourcesContent":["const formState = 'feedback-form-state';\r\nconst form = document.querySelector('.feedback-form');\r\n\r\n// get local storage data\r\nconst localState = JSON.parse(localStorage.getItem(formState));\r\n\r\nif (localState) {\r\n  // fill form fields from local storage\r\n  for (const key of Object.keys(localState)) {\r\n    document.querySelector(`[name=\"${key}\"]`).value = localState[key];\r\n  }\r\n}\r\n\r\n// event to fill in form state object **//\r\nform.addEventListener('input', onInputSaveToLocalStorage);\r\n\r\n// save form form data to local storage **//\r\nform.addEventListener('submit', onSubmitForm);\r\n\r\nfunction onInputSaveToLocalStorage(event) {\r\n  const key = event.target.name;\r\n  const updatedStorage = {\r\n    ...JSON.parse(localStorage.getItem(formState)),\r\n    [key]: event.target.value.trim(),\r\n  };\r\n\r\n  localStorage.setItem(formState, JSON.stringify(updatedStorage));\r\n}\r\n\r\nfunction onSubmitForm(event) {\r\n  event.preventDefault();\r\n\r\n  const formData = new FormData(event.target);\r\n  const formDataObj = Object.fromEntries(formData.entries());\r\n  if (validateFormFields(formDataObj)) {\r\n    // according requirement of Homework 9\r\n    console.log('submit', formDataObj);\r\n\r\n    localStorage.removeItem(formState);\r\n\r\n    event.target.reset();\r\n  }\r\n}\r\n\r\nfunction validateFormFields(formDataObj) {\r\n  let isValid = true;\r\n  for (const key in formDataObj) {\r\n    if (!formDataObj[key]) {\r\n      addBorderInputError(document.querySelector(`[name=\"${key}\"]`));\r\n      isValid = false;\r\n    }\r\n    if (formDataObj[key]) {\r\n      removeBorderInputError(document.querySelector(`[name=\"${key}\"]`));\r\n    }\r\n  }\r\n\r\n  return isValid;\r\n}\r\n\r\nfunction addBorderInputError(input) {\r\n  input.classList.add('error');\r\n}\r\n\r\nfunction removeBorderInputError(input) {\r\n  input.classList.remove('error');\r\n}"],"names":["formState","form","localState","key","onInputSaveToLocalStorage","onSubmitForm","event","updatedStorage","formData","formDataObj","validateFormFields","isValid","addBorderInputError","removeBorderInputError","input"],"mappings":"oDAAA,MAAMA,EAAY,sBACZC,EAAO,SAAS,cAAc,gBAAgB,EAG9CC,EAAa,KAAK,MAAM,aAAa,QAAQF,CAAS,CAAC,EAE7D,GAAIE,EAEF,UAAWC,KAAO,OAAO,KAAKD,CAAU,EACtC,SAAS,cAAc,UAAUC,CAAG,IAAI,EAAE,MAAQD,EAAWC,CAAG,EAKpEF,EAAK,iBAAiB,QAASG,CAAyB,EAGxDH,EAAK,iBAAiB,SAAUI,CAAY,EAE5C,SAASD,EAA0BE,EAAO,CACxC,MAAMH,EAAMG,EAAM,OAAO,KACnBC,EAAiB,CACrB,GAAG,KAAK,MAAM,aAAa,QAAQP,CAAS,CAAC,EAC7C,CAACG,CAAG,EAAGG,EAAM,OAAO,MAAM,KAAM,CACpC,EAEE,aAAa,QAAQN,EAAW,KAAK,UAAUO,CAAc,CAAC,CAChE,CAEA,SAASF,EAAaC,EAAO,CAC3BA,EAAM,eAAc,EAEpB,MAAME,EAAW,IAAI,SAASF,EAAM,MAAM,EACpCG,EAAc,OAAO,YAAYD,EAAS,QAAS,CAAA,EACrDE,EAAmBD,CAAW,IAEhC,QAAQ,IAAI,SAAUA,CAAW,EAEjC,aAAa,WAAWT,CAAS,EAEjCM,EAAM,OAAO,QAEjB,CAEA,SAASI,EAAmBD,EAAa,CACvC,IAAIE,EAAU,GACd,UAAWR,KAAOM,EACXA,EAAYN,CAAG,IAClBS,EAAoB,SAAS,cAAc,UAAUT,CAAG,IAAI,CAAC,EAC7DQ,EAAU,IAERF,EAAYN,CAAG,GACjBU,EAAuB,SAAS,cAAc,UAAUV,CAAG,IAAI,CAAC,EAIpE,OAAOQ,CACT,CAEA,SAASC,EAAoBE,EAAO,CAClCA,EAAM,UAAU,IAAI,OAAO,CAC7B,CAEA,SAASD,EAAuBC,EAAO,CACrCA,EAAM,UAAU,OAAO,OAAO,CAChC"}